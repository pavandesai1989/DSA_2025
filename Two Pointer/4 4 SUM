class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) 
    {
        vector<vector<int>> res;
        int n=nums.size();
        sort(nums.begin(),nums.end());

        for(int i=0;i<n-3;i++)
        {
            //avoid duplicates
            if(i>0 && nums[i]==nums[i-1])
               continue;

            for(int j=i+1;j<n-2;j++)
            {
                if(j>i+1 && nums[j]==nums[j-1])
                  continue;

                long long sum = (long long)target - (long long)(nums[i]+nums[j]);

                //apply 2 pointer
                int left = j+1;
                int right = n-1;

                while(left<right)
                {
                    if(nums[left]+nums[right] == sum) //got the elements
                    {
                        res.push_back({nums[i],nums[j],nums[left],nums[right]});

                        //avoid duplicates
                        while(left<right && nums[left] == nums[left+1])
                           left++;

                        while(left<right && nums[right] == nums[right-1])
                           right--;

                        left++;
                        right--;      
                    }
                    else if(nums[left]+nums[right] < sum)
                    {
                        left++;
                    }
                    else
                    {
                        right--;
                    }
                }
            }
        }
        return res;
    }
};
