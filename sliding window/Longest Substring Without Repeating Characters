class Solution {
public:
    bool isValid(unordered_map<char,int> umap)
    {
        for(auto ele:umap)
        {
            if(ele.second>1)
            {
                return false;
            }
        }
        return true;
    }

    int lengthOfLongestSubstring(string s) 
    {
         int i=0,j=0;
         int n=s.length();
         int maxLen = 0;
         unordered_map<char,int> umap; 

         while(j<n)
         {
             umap[s[j]]++;

             if(isValid(umap))
             {
                maxLen = max(maxLen,j-i+1);
             }
             else
             {
                umap[s[i]]--;

                if(umap[s[i]] == 0)
                {
                    umap.erase(s[i]);
                }
                i++;
             }
             j++;
         }
         return maxLen;
    }
};
